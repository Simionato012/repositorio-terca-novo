# -*- coding: utf-8 -*-
"""terca.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/13Cm-hC1CCZcLpAYPy7vJizErQz3FIpqq
"""

print(1)
print("edu")

"""#variaveis"""

#como escreve variaveis
#normal
num = 10
numdois = 20
#camelcase
saldoBancarioDeHoje = 1000
#snakecase
saldo_bancario_de_ontem = -10000

#Variavel nunca pode comecar com numero
#Uma variavel nunca pode ter espaco, use o underline
#Nao utilize estes simbolos /\<>|()!@#$%&*-+
#SEMPRE DEVE COMECAR POR LETRA MINUSCULA

print(saldo_bancario_de_ontem)
print("Seu saldo bancario de ontem:",saldo_bancario_de_ontem)

"""#tipo de numero"""

inteiro = 10

type(inteiro)

decimal = 10.5

type(decimal)

#adicao
1 + 1
#subtracao
1 - 1
#divisao
14/7
#multiplicacao
4*9
#exponencial
10**2

#ordem das operacoes
10 + 10 * 10

#como especificar a ordem das operacoes
(2 + 10) * (10 - 5)

numero = 10
print(numero)
numero + numero
print(numero)
numero = 30
print(numero)
numero = numero + numero
print(numero)

#Escreva um programa que imprima seu nome na tela.
print("Seu Nome")

#Declare duas variáveis com números e imprima a soma deles.
num1 = 5
num2 = 3
print(num1 + num2)

num1 = 5
num2 = 3
soma = num1 + num2
print("O resultado da soma é: ",soma)

#Declare uma variável com uma mensagem pessoal e imprima-a.
mensagem = "Olá! Eu estou aprendendo Python."
print(mensagem)

#Declare duas variáveis com valores numéricos e imprima a soma, subtração, multiplicação e divisão delas.
num1 = 8
num2 = 4
soma = num1 + num2
subtracao = num1 - num2
multiplicacao = num1 * num2
divisao = num1 / num2
exponencial = num1 ** num2

print("soma: ", soma)
print("subtracao: ", subtracao)
print("multiplicacao: ", multiplicacao)
print("divisao: ", divisao)
print("Exponencial: ", exponencial)

"""#STRING"""

#uma palavra
string1 = "Oi!"
#uma frase
string2 = "Oi, como voce está?"
#uma frase com aspas simples
string3 = 'Benicio ruinzao no brawl stars'

print(string1)
print(string2)
print(string3)

#Como utilizar as "" numa string
string4 = 'Benicio é "Bonito"'
print(string4)

#tres formas de imprimir uma string
string5 = "teste"
print(string5)
print("teste")
'teste'

#utilizar \n para saltar linhas
print("Saltando agora \nsaltei \n!")

#utilizar \t para dar espaços maiores
print("Estou saltando \tsaltado!")

#veja quantos caracteres forma a frase
frase = "O papaleguas"
len(frase)

#indexação de string
nome = "Fulano da Silva Sauro"
#Imprimindo a primeira letra do nome
print(nome[0])

#Imprimindo a partir de um caractere
print(nome[7:])
#Imprimindo até um caractere
print(nome[:7])
#imprimir uma parte especifica
print(nome[10:15])
#imprimir retrocedendo
print(nome[-1])
#tudo menos a utima letra
print(nome[:-1])

#imprimir uma frase saltando letras de 2 em 2
frase = "Tsamina mina, eh, eh Waka waka, eh, eh Tsamina mina zangalewa"
print(frase[::2])

#para encontrar caracteres dentro de uma string use o find()
email = "tsaminaeheh@Wakawaka.com.af"
print(email.find("@"))

#utilize a função count para contar caracteres dentro de uma string
email = "tsaminaeheh@Wakawaka.com.af"
print(email.count("."))

#OPERADORES EM STRINGS

#concatenação
nome = "José"
sobrenome = " Bevidari"
print(nome+sobrenome)

#repetição
print(nome *3)

#numero nao podem ser conctenados com strings
numero_de_irmaos = 2

#use  funcao str() pois ela transforma numeros em strings
print("Voce tem " + str(numero_de_irmaos) + " irmaos")

"""#Listas e matrizes

"""

#Como criar uma lista

alunos = ["Riquelme", "Benicio", "David", "Vinicius", "Eduardo"]
print(alunos)

#Como exibir um indicie em especifico

alunos = ["Riquelme", "Benicio", "David", "Vinicius", "Eduardo"]
print("Primeiro aluno desta turma: " + alunos[0])
#os indicies em python comecam do valor 0

#Como exibir um indicie em especifico

alunos = ["Riquelme", "Benicio", "David", "Vinicius", "Eduardo"]
print("Ultimo aluno desta turma: " + alunos[-1])
#os indicies em python comecam do valor 0

#Como substituir algo na lista

alunos = ["Riquelme", "Benicio", "David", "Vinicius", "Eduardo"]
alunos[4] = "Patolino"
print(alunos)

#Como acrescentar itens dentro da lista

alunos = ["Riquelme", "Benicio", "David", "Vinicius", "Eduardo"]
alunos.append("Joaquim")
print(alunos)

#Como Inseriri algo na lista em um lugar em especifico

alunos = ["Riquelme", "Benicio", "David", "Vinicius", "Eduardo"]
alunos.insert(2, "Arthur")
print(alunos)

#Como remover itens de uma lista

alunos = ["Riquelme", "Benicio", "David", "Vinicius", "Eduardo"]
del alunos[3]
print(alunos)

#Como remover um por um da lista

alunos = ["Riquelme", "Benicio", "David", "Vinicius", "Eduardo"]
alunos.pop()
print(alunos)

#Como remover da lista em especifico utilizando o metodo . pop

alunos = ["Riquelme", "Benicio", "David", "Vinicius", "Eduardo"]
alunos.pop(1)
print(alunos)

#Como remover um item sem dizer a sua posicao

alunos = ["Riquelme", "Benicio", "David", "Vinicius", "Eduardo"]
alunos.remove("Riquelme")
print(alunos)

#Como remover um item sem dizer a sua posicao

alunos = ["Riquelme", "Benicio", "David", "Vinicius", "Eduardo"]
viajando = "Riquelme"
alunos.remove(viajando)
print(alunos)

#Como colocar uma lista em oredem alfabetica
alunos = ["Riquelme", "Benicio", "David", "Vinicius", "Eduardo"]
alunos.sort()
print(alunos)

#Como colocar em oredem inversa
alunos = ["Riquelme", "Benicio", "David", "Vinicius", "Eduardo"]
alunos.sort(reverse=True)
print(alunos)

#O metodo .sort() altera a lista original
print(alunos)

#Crie uma lista vazia e em seguida adicione 3 numeros ou palavras a ela, depois imprima a lista
lista = []
lista.append(1)
lista.append(2)
lista.append(4)
print(lista)

#crie a lista que está a baixo, depois imprima o primeiro e o ultimo numero da lsita
lista = [10, 20, 30, 40, 50]
primeiro = lista[0]
ultimo = lista[-1]
print("Primeiro: ",primeiro)
print("Ultimo: ",ultimo)

#crie a lista que está a baixo e atualize qualquer nome desta lista para outro nome
lista = ["Ana", "Caio", "Fabio"]
lista[0] = "Oi"
print(lista)

"""#CONDICIONAIS"""

#OPERADORES DE COMPARACAO

#IGUALDADE / ==
#DIFERENTE / !=
#MAIOR E MAIOR OU IGUAL / > E >=
#MENOR E MENOR OU IGUAL / < E <=

#IGUALDADE
n1 = 10
n2 = 50
texto1 = "santos"
texto2 = "sao jose"

print(n1 == n2)
print(n1 * 5 == n2)
print(texto1 == texto2)
print("-----------------------")

#DIFERENTE
print(n1 != n2)
print(n1 * 5 != n2)
print(texto1 != texto2)
print("-----------------------")

#MAIOR E MAIOR OU IGUAL
print(n1 > n2)
print(n1 * 5 > n2)
print(n1 * 5 >= n2)
print("-----------------------")

#MENOR E MENOR OU IGUAL
print(n1 < n2)
print(n1 * 5 < n2)
print(n1 * 5 <= n2)

#OPERADORES EM CADEIA
#AND / Todas as condicoes precisam ser verdadeiras
print( 1 < 2 < 3)

#o mesmo que 1 < 2 < 3
print( 1 < 2 and 2 < 3)

print(1 < 2 and 2 < 3 and 3 > 4)
print("--------------")

#OR / Uma condicao somente precisa ser verdadeira

print( 1 > 2 or 1 < 2)

"""#CONDICIONAIS IF / ELIF / ELSE"""

#IF = SE
#ELIF = SENAO
#ELSE = ENTAO

nota = float(input("Digite a sua nota: "))

if nota >= 6:
  print("Aprovado")
elif nota >= 4 and nota < 6:
  print("REC")
else:
  print("Reprovado")

#Programa de verificacao de idade

idade = float(input("Qual é a sua idade: "))

if idade >= 18:
  print("Voce é maior de idade")
else:
  print("Voce é menor de idade")

#Escreva um programa que pergunte ao usuário um número e, em seguida, imprima se o número é positivo, negativo ou zero.

numero = float(input("Digite um numero: "))

if numero > 0:
  print("Numero é maior que 0")
elif numero < 0:
  print("Numero é menor que 0")
else:
  print("Numeor é igual a 0")

"""#ESTRUTURAS DE REPETIÇÃO"""

#FOR
numeros = [1,2,3,4,5,6,7,8,9,10]

for i in numeros:
  print(i)

for i in range(1,11):
  print(i)

for num in range(1,11):
  if num %2 == 0:
    print(num)

for letra in "Riquelme":
  print(letra)

for num in range(2,21):
  e_primo = True

  for num_teste in range(2, num):
    if num % num_teste == 0:
      e_primo = False
      break

  if(e_primo):
    print("É primo: ",num)
  else:
    print("Não é primo: ",num)

from textwrap import wrap
#WHILE

n = 10

while(n > 0):
  print(n)
  n = n - 1
print("Encerrou")

"""#OUTROS TIPOS DE LISTAS"""

#Lists

#Sao ordenados
#pode ter qualquer tipo de dado
#acessada por indicies a partir de 0
#sao muitaveis, ou seja, podem ser modificadas depois de criadas
#sao definidos por []

meu_list = [1,2,3,4,5]

#SETS

#Nao sao ordenadas
#Nao temos valores duplicados
#a lista nao possui indicie
#sao mutaveis, podemos adicionar e remover itens
#sao definidos utilizando {}

meus_sets = {1,2,3,4,5}

#Tuples

#Sao ordenadas e imutaveis(nao pode alterar nada depois de ser criada)
#aceita qualquer tipo de dado
#possui indicie
#sao defnidas por ()

mmeu_tuple = (1,2,3,4,5)

#Dictionaries
#Sao de pares chave-valor
#os elemntos sao acessados por chaves, nao por indicies
#as chaves devem ter um valor unico, porem o valor pode se repetir


meu_dicionario = {"senha": 123, "senha2":321}

#SETS
#sao mutaveis e podemos utilizar metodos

sets = set()

sets.add(1)

sets.add(2)

print(sets)

sets.add(1)
#Listas do tipo Sets nao é possivel repetir valores/dados

print(sets)

a = True
b = False

#Eu posso (se quiser sim) aplicar valores booleanos a partir de expressoes

c = 1 < 2
d = 7 > 10

print(a,b,c,d)

#TUPLAS
#varios tipos de dados
tupla = ('um', 2, 'tres', True, 4.5, 'cinco ponto seis', False)

print(tupla[2])
print(tupla[2:5])
print("--------------------------------------")

tupla2 = (1,2,2,3,3,3,4,4,4,4)

#metodos que consguimos utilizar
print(len(tupla2))
print(tupla2.count(4))

#nao conseguimos utilizar pois uma tupla é imutavel
#append
#pop
#remove
#index

#Dictionaries
#Sao de pares chave-valor
#os elemntos sao acessados por chaves, nao por indicies
#as chaves devem ter um valor unico, porem o valor pode se repetir

dicionario = {'defenestrar':'tacar o benicio pela janela', 'ps5':'R$3500', 'chave1': 3}

print(dicionario['defenestrar'])

# {'chave':[valor1, valor2]}

estatisticas = {'cr7':[30,15], 'messi':[2,0], 'caça rato':[90,50]}

print(estatisticas['caça rato'][0])

#desafio aula 4
# Definindo o dicionário com os códigos e os preços dos itens
tabela_precos = {
    1: 4.00,
    2: 4.50,
    3: 5.00,
    4: 2.00,
    5: 1.50
}

# Lendo o código do item e a quantidade
codigo_item = int(input("Digite o codigo do item: "))
quantidade = int(input("Digite a quantidade: "))

#Verificando se o codigo do item é valido
if codigo_item in tabela_precos:
  #calculando o valor total a ser pago
  valor_total = tabela_precos[codigo_item] * quantidade

  #formatando a saida com duas casas decimais
  valor_formatado = round(valor_total, 2)

  #imprimindo o valor total a ser pago
  print("Total: R$",valor_formatado)
else:
  print("Codigo de item invalido")

"""#FUNCOES

"""

def bem_vindo():
  print("Seja bem vindo ")

bem_vindo()

def boas_vindas(nomeDeUsuario):
  print("Seja bem-vindo, a aula", nomeDeUsuario)

boas_vindas("CR7")

# Crie uma funçao chamada filme_favorito() que aceita um parametro chamado "titulo"
#e a funcao deve exibir a mensagem "Um dos meus filmes favoritos é ......."

# a formula da velocidade é V = D/T

def velocidade(distancia, tempo):
  velocidade = distancia // tempo
  print("A sua velocidade é de: %d" % (velocidade))

velocidade(100, 20)

def velocidade(tempo, distancia = 100):
  velocidade = distancia // tempo
  print("A sua velocidade é de: %d" % (velocidade))

velocidade(20)

def menor(a, b):
  if a<=b:
    return a
  else:
    return b

a = int(input("Digite o primeiro numero: "))
b = int(input("Digite o segundo numero: "))

print("O menor valor entre %d e %d é %d" % (a, b, menor(a, b)))

"""#MODULOS"""

#importando um modulo
import math

#2 elevado a 4
print(math.pow(2,4))

#arredondando valores
print(math.ceil(2.5))#arredondar para cima
print(math.trunc(2.5))#arredonda para baixo

#Como ver todas as funcoes de um modulo
print(dir(math))

print(math.radians(100000000))

from google.colab import drive
drive.mount('/content/gdrive')

import sys

sys.path.insert(0, '/content/gdrive/MyDrive/Modulos')

import calculadora

calculadora.multiplicacao(5,5)

"""#ARQUIVOS"""

# Commented out IPython magic to ensure Python compatibility.
# %%writefile texto.txt
# 
# O benicio é um aluno de 13 alunos,
# Bryan joga Roblox,
# Riquelme é Santista,
# David já ganhou na mega sena e
# Vinicius joga beach tenis

# Abre um arquivo txt já existente

arquivo = open('texto.txt')

#Lê todo o arquivo
arquivo.read()

#Lê todo o arquivo novamente
arquivo.read()

#Procurando o inicio do arquivo
arquivo.seek(0)
#Agora a gente le o arquivo do inicio
arquivo.read()

# Commented out IPython magic to ensure Python compatibility.
# %%writefile herois.txt
# Miranha, Morceguinho, Totuguita
# Aranha-venenosa, Gelinho

arquivo = open('herois.txt')
#Lendo linha por linha
print(arquivo.readline())
#Lendo segunda linha
print(arquivo.readline())

#Lnedo o arquivo inteiro com for
arquivo = open('herois.txt', 'r')

for x in arquivo:
  print(x)

#Adiciona um segundo argumento a funcao, w, para escrita
arquivo = open('herois.txt', 'w')

#escrever no arquivo
arquivo.write('Latão, vencivel')

arquivo = open('herois.txt')
arquivo.seek(0)
arquivo.read()

arquivo = open('herois.txt')

arquivo = close()

nome = input("Digite sue nome: ")

patati = "patata"

print(patati)

def validar_senha(senha):
  caracteres_especias = '!@#$%¨&*'

  if len(senha) > 8 and any(char in caracteres_especias for char in senha):
    return True
  else:
    return False

senha1 = input("Digite sua senha: ")

validar_senha(senha1)